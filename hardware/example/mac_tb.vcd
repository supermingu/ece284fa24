$date
	Mon Sep 27 22:03:21 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mac_tb $end
$var wire 16 ! out [15:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 16 $ c [15:0] $end
$var reg 1 % clk $end
$var reg 16 & expected_out [15:0] $end
$var integer 32 ' i [31:0] $end
$var integer 32 ( w_dec [31:0] $end
$var integer 32 ) w_file [31:0] $end
$var integer 32 * w_scan_file [31:0] $end
$var integer 32 + x_dec [31:0] $end
$var integer 32 , x_file [31:0] $end
$var integer 32 - x_scan_file [31:0] $end
$scope function dec2bin $end
$var reg 4 . dec2bin [3:0] $end
$var integer 32 / weight [31:0] $end
$upscope $end
$scope function mac_predicted $end
$var reg 4 0 a [3:0] $end
$var reg 4 1 b [3:0] $end
$var reg 16 2 c [15:0] $end
$var reg 16 3 mac_predicted [15:0] $end
$var reg 8 4 product [7:0] $end
$upscope $end
$scope module mac_instance $end
$var wire 4 5 a [3:0] $end
$var wire 4 6 b [3:0] $end
$var wire 16 7 c [15:0] $end
$var wire 1 % clk $end
$var wire 8 8 product [7:0] $end
$var wire 16 9 out [15:0] $end
$var reg 4 : a_q [3:0] $end
$var reg 4 ; b_q [3:0] $end
$var reg 16 < c_q [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
b10000000000000000000000000000100 ,
bx +
bx *
b10000000000000000000000000000011 )
bx (
bx '
b0 &
0%
bx $
bx #
bx "
bx !
$end
#2
1%
#3
b0 '
0%
#4
1%
#5
b1 '
b1111111111111010 &
b1111111111111010 3
b11111010 4
b1010 0
b1 1
b0 2
b0 $
b0 7
b1 #
b1 6
b1010 "
b1010 5
b1 .
b1 /
b1 -
b11111111111111111111111111111010 +
b1 *
b1 (
0%
#6
b1111111111111010 !
b1111111111111010 9
b0 <
b11111010 8
b1010 :
b1 ;
1%
#7
b10 '
b1111111111001001 &
b1111111111001001 3
b11001111 4
b111 0
b1001 1
b1111111111111010 2
b1111111111111010 $
b1111111111111010 7
b1001 #
b1001 6
b111 "
b111 5
b1001 .
b1 /
b111 +
b11111111111111111111111111111001 (
0%
#8
b1111111111111010 <
b111 :
b1111111111001001 !
b1111111111001001 9
b11001111 8
b1001 ;
1%
#9
b11 '
b1111111111000010 &
b1111111111000010 3
b11111001 4
b1111 0
b111 1
b1111111111001001 2
b1111111111001001 $
b1111111111001001 7
b111 #
b111 6
b1111 "
b1111 5
b111 .
b1 /
b11111111111111111111111111111111 +
b111 (
0%
#10
b1111111111001001 <
b1111 :
b1111111111000010 !
b1111111111000010 9
b11111001 8
b111 ;
1%
#11
b100 '
b1111111110110110 &
b1111111110110110 3
b11110100 4
b11 0
b1100 1
b1111111111000010 2
b1111111111000010 $
b1111111111000010 7
b1100 #
b1100 6
b11 "
b11 5
b1100 .
b0 /
b11 +
b11111111111111111111111111111100 (
0%
#12
b1111111111000010 <
b11 :
b1111111110110110 !
b1111111110110110 9
b11110100 8
b1100 ;
1%
#13
b101 '
b1111111110110000 &
b1111111110110000 3
b11111010 4
b10 0
b1101 1
b1111111110110110 2
b1111111110110110 $
b1111111110110110 7
b1101 #
b1101 6
b10 "
b10 5
b1101 .
b1 /
b10 +
b11111111111111111111111111111101 (
0%
#14
b1111111110110110 <
b10 :
b1111111110110000 !
b1111111110110000 9
b11111010 8
b1101 ;
1%
#15
b110 '
b1111111110110100 &
b1111111110110100 3
b100 4
b1110 0
b1110 1
b1111111110110000 2
b1111111110110000 $
b1111111110110000 7
b1110 #
b1110 6
b1110 "
b1110 5
b1110 .
b0 /
b11111111111111111111111111111110 +
b11111111111111111111111111111110 (
0%
#16
b1111111110110000 <
b1110 :
b1111111110110100 !
b1111111110110100 9
b100 8
b1110 ;
1%
#17
b111 '
b1111111110110000 &
b1111111110110000 3
b11111100 4
b1 0
b1100 1
b1111111110110100 2
b1111111110110100 $
b1111111110110100 7
b1100 #
b1100 6
b1 "
b1 5
b1100 .
b0 /
b1 +
b11111111111111111111111111111100 (
0%
#18
b1111111110110100 <
b1 :
b1111111110110000 !
b1111111110110000 9
b11111100 8
b1100 ;
1%
#19
b1000 '
b1111111111000100 &
b1111111111000100 3
b10100 4
b100 0
b101 1
b1111111110110000 2
b1111111110110000 $
b1111111110110000 7
b101 #
b101 6
b100 "
b100 5
b101 .
b1 /
b100 +
b101 (
0%
#20
b1111111110110000 <
b100 :
b1111111111000100 !
b1111111111000100 9
b10100 8
b101 ;
1%
#21
b1001 '
b1111111111101000 &
b1111111111101000 3
b100100 4
b1010 0
b1010 1
b1111111111000100 2
b1111111111000100 $
b1111111111000100 7
b1010 #
b1010 6
b1010 "
b1010 5
b1010 .
b0 /
b11111111111111111111111111111010 +
b11111111111111111111111111111010 (
0%
#22
b1111111111000100 <
b1010 :
b1111111111101000 !
b1111111111101000 9
b100100 8
b1010 ;
1%
#23
b1010 '
b1111111111111000 &
b1111111111111000 3
b10000 4
b100 0
b100 1
b1111111111101000 2
b1111111111101000 $
b1111111111101000 7
b100 #
b100 6
b100 "
b100 5
b100 .
b0 /
b100 +
b100 (
0%
#24
b1111111111101000 <
b100 :
b1111111111111000 !
b1111111111111000 9
b10000 8
b100 ;
1%
#25
0%
#35
